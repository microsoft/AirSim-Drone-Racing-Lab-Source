variables:
  container_linux: airsimci.azurecr.io/ue4p25p1/ubuntu18:debugeditor_fulldebugoff
  ue4_root_linux: /home/ue4/ue-4.25.1-linux-debugeditor
  container_win: airsimci.azurecr.io/ue4p25p1/win1809:pipe
  ue4_root_win: C:\ue-4.25.1-win

stages:
  - stage: AirSimCI
    jobs:
      - job: Ubuntu_1804
        pool:
          name: "AirSim"
          demands:
            - Spec -equals Ubuntu_18.04
        container:
          image: $(container_linux)
          endpoint: airsimci_acr_connection
        variables:
          ue4_root: $(ue4_root_linux)
        workspace:
          clean: all
        steps:
          - checkout: self
            submodules: true

          # Setup / Prereq
          - script: |
              ./setup.sh
            displayName: ./setup.sh

          #  submodules
          - script: |
              cd external/gflags_airsim/
              git checkout linux-autobuild
              cd ../../external/glog_airsim
              git checkout linux-autobuild
              cd ../../external/nlopt_airsim
              git checkout linux-autobuild
              cd ../
            displayName: Checkout submodules linux branch

          # Build AirLib
          - script: |
              ./build.sh
            displayName: Build AirLib

            # Build ADRL
          - script: |
              $(UE4_ROOT)/Engine/Build/BatchFiles/Linux/Build.sh ADRL Linux Development \
                -project=$(pwd)/Unreal/ADRL.uproject
              $(UE4_ROOT)/Engine/Build/BatchFiles/Linux/Build.sh ADRLEditor Linux Development \
                -project=$(pwd)/Unreal/ADRL.uproject
            displayName: Build ADRL - Development

          # Package ADRL
          - script: |
              $(UE4_ROOT)/Engine/Build/BatchFiles/RunUAT.sh BuildCookRun \
                -project="$(pwd)/Unreal/ADRL.uproject" \
                -nop4 -nocompile -build -cook -compressed -pak -allmaps -stage \
                -archive -archivedirectory="$(pwd)/Unreal/Packaged/Development" \
                -clientconfig=Development -clean -utf8output
            displayName: Package ADRL - Development

          # Publish Artifact for ADRL Linux
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "Unreal/Packaged"
              artifactName: "ADRL_Linux"
            displayName: Artifact for ADRL Linux
            condition: succeededOrFailed()

          - task: ArchiveFiles@2
            displayName: ADRL Linux Zip
            inputs:
              rootFolderOrFile: "Unreal/Packaged"
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "Unreal/Packaged/ADRL_Linux.zip"
              replaceExistingArchive: true

      - job: Windows_VS2019
        pool:
          name: "AirSim"
          demands:
            - Spec -equals WinServer2019_VS2019_Datacenter
        container:
          image: $(container_win)
          endpoint: airsimci_acr_connection
        variables:
          ue4_root: $(ue4_root_win)
        workspace:
          clean: all

        steps:
          - checkout: self
            submodules: true

          #  submodules
          - script: |
              cd external/gflags_airsim/
              git checkout windows-autobuild
              cd ../../external/glog_airsim
              git checkout windows-autobuild
              cd ../../external/nlopt_airsim
              git checkout windows-autobuild
              cd ../
            displayName: Checkout submodules windows branch

          # Build AirLib
          - script: |
              call "C:\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
              call .\build.cmd
            displayName: Build AirLib

          # Build ADRL
          - script: |
              call "%UE4_ROOT%\Engine\Build\BatchFiles\Build.bat" ADRL Win64 Development -project="%CD%\Unreal\ADRL.uproject"
              call "%UE4_ROOT%\Engine\Build\BatchFiles\Build.bat" ADRLEditor Win64 Development -project="%CD%\Unreal\ADRL.uproject"
            displayName: Build ADRL - Development

          # Package ADRL
          - script: |
              call "%UE4_ROOT%\Engine\Build\BatchFiles\RunUAT.bat" BuildCookRun -project="%CD%\Unreal\ADRL.uproject" -nop4 -nocompile -build -cook -compressed -pak -allmaps -stage -archive -archivedirectory="%CD%\Unreal\Packaged\Development" -clientconfig=Development -clean -utf8output
            # call "%UE4_ROOT%\Engine\Build\BatchFiles\RunUAT.bat" BuildCookRun -project="%CD%\Unreal\ADRL.uproject" -nocompileeditor -installed -nop4 -cook -stage -archive -archivedirectory="%CD%\Unreal\Packaged\Development" -package -ddc=InstalledDerivedDataBackendGraph -pak -prereqs -nodebuginfo -targetplatform=Win64 -build -target=ADRL -clientconfig=Development -utf8output
            displayName: Package ADRL - Development

          # Publish Artifact for ADRL Windows
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "Unreal/Packaged"
              artifactName: "ADRL_Windows"
            displayName: Artifact for ADRL Windows
            condition: succeededOrFailed()

          - task: ArchiveFiles@2
            displayName: ADRL Windows Zip
            inputs:
              rootFolderOrFile: "Unreal/Packaged"
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "Unreal/Packaged/ADRL_Windows.zip"
              replaceExistingArchive: true
